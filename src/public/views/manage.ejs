<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Feathered Elections | Editor</title>
  <link rel="shortcut icon" href="/img/logo.webp" type="image/x-icon">

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

  <script src="https://cdn.jsdelivr.net/npm/atropos@2.0.2/atropos.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/atropos@2.0.2/atropos.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">


  <link rel="stylesheet" href="/css/main.css">
  <link rel="stylesheet" href="/css/manage.css">

  <script src="/js/applyAttributeContent.js"></script>

</head>

<body>
  <%-include("./prefabs/nav.ejs") %>
  <script>
    const mapOptions = new Map()
  </script>
  <main>
    <div class="container">
      <div class="row">
        <div class="col-4">
          <div class="playerSkin">
            <div class="playerBody">
              <div class="atropos" id="mayorSkin">
                <!-- scale container (required) -->
                <div class="atropos-scale">
                  <!-- rotate container (required) -->
                  <div class="atropos-rotate">
                    <!-- inner container (required) -->
                    <div class="atropos-inner">
                      <img src="https://mc-heads.net/body/<%- mayor["skin-npc"] %>" alt="" id="skin-preview">
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div>
              <div>
                <input type="text" class="form-control" id="skin-browser" placeholder="Skin Username" value="<%- mayor["skin-npc"] %>">
              </div>
              <div class="d-space-between mt-3">
                <button type="submit" class="btn btn-outline-primary" id="skin-get" onclick="getSkin()">Get Skin</button>
                <button type="submit" class="btn btn-outline-primary" id="skin-set" onclick="confirmSkin()">Confirm Skin</button>

                <button type="submit" class="btn btn-outline-danger" id="skin-delete" onclick="deleteMayor()">Delete</button>
                <button type="submit" class="btn btn-outline-success" id="mayor-save" onclick="saveMayor()">Save</button>
              </div>
            </div>



          </div>

        </div>
        <div class="col-4">
          <div class="mayorContent">
            <div class="input-group mb-3">
              <span class="input-group-text" id="basic-addon1">Name</span>
              <input type="text" name="name" id="name" placeholder="Name" value="<%- mayor.name %>" class="form-control">
            </div>
            <div>
              <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Color</span>
                <select id="color" name="color" class="form-select">
                  <option value="&0">Black</option>
                  <option value="&1">Dark Blue</option>
                  <option value="&2">Dark Green</option>
                  <option value="&3">Teal (Dark Aqua)</option>
                  <option value="&4">Dark Red</option>
                  <option value="&5">Purple</option>
                  <option value="&6">Gold (Orange)</option>
                  <option value="&7">Light Gray</option>
                  <option value="&8">Dark Gray</option>
                  <option value="&9">Light Blue</option>
                  <option value="&a">Lime Green</option>
                  <option value="&b">Aqua (Cyan)</option>
                  <option value="&c">Light Red</option>
                  <option value="&d">Pink</option>
                  <option value="&e">Yellow</option>
                  <option value="&f">White</option>
                </select>
              </div>

            </div>
            <div>
              <div class="input-group mb-3">
                <span class="input-group-text" id="basic-addon1">Lore</span>
                <textarea id="effect-lore" class="form-control" cols="30" rows="10"><%- mayor["effect-lore"].join("\n") %></textarea>
              </div>

            </div>

            <div class="effectsContainer">
              <div class="createEffect">
                <div class="setEffect">
                  <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1">Effect</span>
                    <select class="form-select" id="currentEffect">
                      <option value="apply_attribute">Apply Attribute</option>
                      <option value="apply_damage">Apply Damage</option>
                      <option value="apply_stat_mmoitem">Apply Stat MMOItem</option>
                      <option value="apply_potion_entity">Apply Potion Entity</option>
                      <option value="apply_potion_player">Apply Potion Player</option>
                      <option value="remove_potion">Remove Potion</option>
                      <option value="cancel_event">Cancel Event</option>
                      <option value="create_hologram">Create Hologram</option>
                      <option value="give_exp">Give EXP</option>
                      <option value="give_exp_skill_aurelium">Give EXP Skill Aurelium</option>
                      <option value="give_item">Give Item</option>
                      <option value="execute_command">Execute Command</option>
                      <option value="give_money">Give Money</option>
                      <option value="modify_shop">Modify Shop</option>
                      <option value="multiply_drop">Multiply Drop</option>
                      <option value="multiply_experience">Multiply Experience</option>
                      <option value="play_sound">Play Sound</option>
                      <option value="random_teleport">Random Teleport</option>
                      <option value="send_actionbar">Send Actionbar</option>
                      <option value="send_broadcast">Send Broadcast</option>
                      <option value="send_message">Send Message</option>
                      <option value="send_title">Send Title</option>
                      <option value="spawn_particles">Spawn Particles</option>
                      <option value="spawn_entity">Spawn Entity</option>
                      <option value="apply_stat_aurelium">Apply Stat Aurelium</option>
                    </select>
                  </div>

                </div>
                <div id="renderEffect">
                </div>

                <div>

                  <div class="d-space-between mt-3">
                    <button type="submit" class="btn btn-outline-primary" onclick="addEffect()">Add Effect</button>
                  </div>
                </div>

              </div>
            </div>

          </div>
        </div>
        <div class="col-4">
          <div id="allEffects">
            <% for( let i = 0; i < mayor.effects.length; i++ ) { %>
            <div class="input-group mb-3 effectPushed" id="effectPushed-${vals.length}">
              <span class="input-group-text deleteEffect" onclick="deleteEffect('effectPushed-<%-i%>')">Delete</span>
              <textarea i class="form-control effectText" cols="20" rows="5"><%- mayor.effects[i].yaml %></textarea>
            </div>
            <% } %>


          </div>
        </div>

      </div>
  </main>
  <footer></footer>
  <script>
    const skinBrowser = document.getElementById("skin-browser")
    const getSkinDataButton = document.getElementById("skin-get")
    const skinPreview = document.getElementById("skin-preview")
    const renderBase = document.getElementById("renderEffect")
    const currentEffect = document.getElementById("currentEffect")
    let skinName = '<%- mayor["skin-npc"] %>'


    currentEffect.onchange = () => updateChanges();

    function updateChanges() {
      mapOptions
        .set("apply_attribute", () => renderEffect(applyAttribute))
        .set("apply_damage", null)
        .set("apply_stat_mmoitem", null)
        .set("apply_potion_entity", null)
        .set("apply_potion_player", null)
        .set("remove_potion", null)
        .set("cancel_event", null)
        .set("create_hologram", null)
        .set("give_exp", null)
        .set("give_exp_skill_aurelium", null)
        .set("give_item", null)
        .set("execute_command", null)
        .set("give_money", null)
        .set("modify_shop", null)
        .set("multiply_drop", null)
        .set("multiply_experience", null)
        .set("play_sound", null)
        .set("random_teleport", null)
        .set("send_actionbar", null)
        .set("send_broadcast", null)
        .set("send_message", null)
        .set("send_title", null)
        .set("spawn_particles", null)
        .set("spawn_entity", null)
        .set("apply_stat_aurelium", null);

      [...document.getElementsByClassName("renderedEffect")].map(v => v.remove())

      if (mapOptions.has(currentEffect.value) && mapOptions.get(currentEffect.value) != null) mapOptions.get(currentEffect.value)()
    }

    function getSkin() {
      if (skinBrowser.value.toLowerCase().trim().length == 0) return;
      skinPreview.src = "https://mc-heads.net/body/" + skinBrowser.value.toLowerCase()
    }

    function confirmSkin() {
      skinName = skinBrowser.value.toLowerCase()
    }

    function saveMayor() {

      fetch("/manage/<%- pageid %>", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          name: document.getElementById("name").value,
          "skin-npc": skinName,
          color: document.getElementById("color").value,
          "effect-lore": document.getElementById("effect-lore").value,
          effects: [...document.getElementsByClassName("effectText")].map(v => {
            return v.value
          })

        })
      }).then(v => v.json().then(t => {
        console.log(t)
        window.location.reload()
      }))
    }

    function renderEffect(effect) {
      renderBase.insertAdjacentHTML("beforeend", effect.content)
      effect.execute()
    }

    const myAtropos = Atropos({
      el: "#mayorSkin",
      highlight: false
    })

    function addEffect() {
      const textContent = document.getElementById("finalJSON")
      const allEffects = document.getElementById("allEffects")
      const vals = [...document.getElementsByClassName("effectPushed")]

      allEffects.insertAdjacentHTML("beforeend", `            <div class="input-group mb-3 effectPushed" id="effectPushed-${vals.length}">
              <span class="input-group-text deleteEffect" onclick="deleteEffect('effectPushed-${vals.length}')">Delete</span>
              <textarea i class="form-control effectText" cols="20" rows="5">${textContent.value}</textarea>
            </div>`)
    }

    function deleteEffect(vid) {
      document.getElementById(vid).remove()
    }

    updateChanges()
  </script>
</body>

</html>